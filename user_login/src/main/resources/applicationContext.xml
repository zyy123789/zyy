<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	 http://www.springframework.org/schema/tx/spring-tx.xsd">
	 
	 
	<!-- 扫描业务层和数据层组件 -->
	<context:component-scan base-package="com.baidu"/>
	
	<!-- 数据源 -->
	<bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql:///1702D?characterEncoding=utf-8"></property>
	</bean>
	
	<!-- SQLSessionFactory-->
	<bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" autowire="byName">
	    <!-- 引入数据源 -->
		<!-- <property name="dataSource" ref="dataSource"></property> -->
		<!-- 扫描映射文件包 -->
		<property name="mapperLocations" value="classpath:com/baidu/mapper/*.xml"></property>
		<!-- 别名的配置 -->
		<property name="typeAliasesPackage" value="com.baidu.bean"></property>
		<!-- mybatis 的分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<props>
							<prop key="dialect">mysql</prop>
							<prop key="supportMethodsArguments">true</prop>
						</props>
					</property>
				</bean>			
			</array>
		</property>
	</bean>
	<!-- mybatis 接口扫描 -->
	<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer" autowire="byName">
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory"></property> -->
		<property name="basePackage" value="com.baidu.mapper"></property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 事务的注解方式配置 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- AOP的切入点 -->
	<aop:config>
		<!-- com.bw.service:切入点所在的包
			第一个*：是指任意的方法返回值类型 或者访问修饰符
			第二个*：包下任意的接口或者任意的类
			第三个*：接口或者类中任意的方法
			..:方法无论有参数还是无参数
			 -->
		<aop:pointcut expression="execution(* com.baidu.service..*.*(..))" id="pointcut"/>
		<aop:advisor advice-ref="txadvice"   pointcut-ref="pointcut"/>	
	</aop:config>
	<!-- 事务规则的增强配置    service中所有的方法命名时候必须要按照下面的规则，规则可以自己修改-->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="upd*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="choose*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/> 
			<tx:method name="call*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="*" read-only="true"/> 
		</tx:attributes>
	</tx:advice>

</beans>